package ${package.Controller};

import com.baomidou.mybatisplus.plugins.Page;
import ${package.Entity}.${entity};
import com.shuframework.${package.ModuleName}.query.${entity}DTO;
import ${package.Service}.${table.serviceName};
import com.shuframework.commonbase.enums.FailureEnum;
import com.shuframework.commonbase.result.Result;
import com.shuframework.commonbase.result.ResultUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end
#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

## ${table.entityName} 是大写，${table.entityPath}是小写
    @Autowired
    private ${table.serviceName} ${table.entityPath}Service;


    /**
     * 获取数据列表
     */
    @RequestMapping("/selectPage")
    public Result selectPage(@RequestBody ${entity}DTO ${table.entityPath}DTO){
        Page<${entity}> page = new Page(${table.entityPath}DTO.getPageIndex, ${table.entityPath}DTO.getPageSize);
        page = sysUserService.selectPage(page, sysUserDTO);
        return ResultUtil.success(page);
    }
##
##    /**
##     * 获取全部数据
##     */
##    @RequestMapping("/findAll")
##    public Result findAll(@RequestBody ${entity}DTO ${table.entityPath}DTO){
##        List<${entity}> list = ${table.entityPath}Service.selectList(null);
##        return ResultUtil.success(list);
##    }

    /**
     * 根据ID查找数据
     */
    @RequestMapping("/detail")
    public Result detail(@RequestParam("id") Long id){
        ${entity} ${table.entityPath} = ${table.entityPath}Service.selectById(id);
        if(${table.entityPath} == null){
            return ResultUtil.failure(FailureEnum.NOTEXIST_FAILURE);
        }
        return ResultUtil.success(${table.entityPath});
    }

    /**
     * 添加数据
     */
    @PostMapping(value = "/insert")
    public Result insert(@RequestBody ${entity} ${table.entityPath}){
        boolean flag = ${table.entityPath}Service.insert(${table.entityPath});
        if(flag){
            return ResultUtil.successOfInsert(${table.entityPath});
        }
        return ResultUtil.failureOfInsert(${table.entityPath});
    }

    /**
     * 更新数据
     */
    @PostMapping(value = "/update")
    public Result update(@RequestBody ${entity} ${table.entityPath}){
        boolean isOk = ${table.entityPath}Service.updateAllColumnById(${table.entityPath});
        if(isOk){
            return ResultUtil.successOfUpdate(${table.entityPath});
        }
        return ResultUtil.failureOfUpdate(${table.entityPath});
    }

    /**
     * 删除数据
     */
    @RequestMapping("/delete")
    public Result delete(@RequestParam("ids") List<Long> ids){
        boolean isOk = ${table.entityPath}Service.deleteBatchIds(ids);
        if(isOk){
            return ResultUtil.successOfDelete(ids);
        }
        return ResultUtil.failureOfDelete(ids);
    }

}
#end